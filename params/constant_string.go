// Code generated by "stringer -type ParameterNameCode -linecomment -output constant_string.go"; DO NOT EDIT.

package params

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PCodeEndOfOptionalParameters-0]
	_ = x[PCodeDestinationLocalReference-1]
	_ = x[PCodeSourceLocalReference-2]
	_ = x[PCodeCalledPartyAddress-3]
	_ = x[PCodeCallingPartyAddress-4]
	_ = x[PCodeProtocolClass-5]
	_ = x[PCodeSegmentingReassembling-6]
	_ = x[PCodeReceiveSequenceNumber-7]
	_ = x[PCodeSequencingSegmenting-8]
	_ = x[PCodeCredit-9]
	_ = x[PCodeReleaseCause-10]
	_ = x[PCodeReturnCause-11]
	_ = x[PCodeResetCause-12]
	_ = x[PCodeErrorCause-13]
	_ = x[PCodeRefusalCause-14]
	_ = x[PCodeData-15]
	_ = x[PCodeSegmentation-16]
	_ = x[PCodeHopCounter-17]
	_ = x[PCodeImportance-18]
	_ = x[PCodeLongData-19]
}

const _ParameterNameCode_name = "End of optional parametersDestination local referenceSource local referenceCalled party addressCalling party addressProtocol classSegmenting/reassemblingReceive sequence numberSequencing/segmentingCreditRelease causeReturn causeReset causeError causeRefusal causeDataSegmentationHop CounterImportanceLong data"

var _ParameterNameCode_index = [...]uint16{0, 26, 53, 75, 95, 116, 130, 153, 176, 197, 203, 216, 228, 239, 250, 263, 267, 279, 290, 300, 309}

func (i ParameterNameCode) String() string {
	if i >= ParameterNameCode(len(_ParameterNameCode_index)-1) {
		return "ParameterNameCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ParameterNameCode_name[_ParameterNameCode_index[i]:_ParameterNameCode_index[i+1]]
}
